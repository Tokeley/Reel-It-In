<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="240px" preserveAspectRatio="none" style="width:270px;height:240px;background:#FFFFFF;" version="1.1" viewBox="0 0 270 240" width="270px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="140" x="5" y="19">Dot Executable: null</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="173" x="5" y="36.6094">No dot executable found</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="258" x="5" y="54.2188">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="71.8281"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="71" x="5" y="89.4375">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="50" x="5" y="107.0469">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66" x="5" y="124.6563">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="142.2656"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="15" x="9" y="159.875">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="177.4844"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="201" x="5" y="195.0938">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="212.7031"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="184" x="42" y="231.6934">UMLDoclet 2.0.14, PlantUML 1.2021.9</text><!--MD5=[23b211ba316af4569b26b9983685d167]
@startuml
    namespace nz.ac.wgtn.swen225.lc.app {

        class App [[App.html]] {
            -timeLabel: JLabel
            +treasureLabel: JLabel
            ~inventorySlots: JLabel[]
            ~brown: Color
            -time: int
            {static} -renderer: Renderer
            ~leftPanel: JPanel
            ~rightPanel: JPanel
            {static} ~centrePanel: Renderer
            {static} ~board: Board
            -audioUnit: AudioUnit
            -treasureLeft: int
            -backgroundImageLabel: JLabel
            -grid: JPanel
            -timer: Timer
            +paused: boolean
            -layeredPane: JLayeredPane
            +setup(File): void
            +createInventory(int): JPanel
            +updateInventory(Item[]): void
            +createLabel(String, Font, Color, Color): JLabel
            -createTimer(): void
            +setPaused(boolean): void
            +actionPerformed(ActionEvent): void
            {static} +getRenderer(): Renderer
            {static} +getBoard(): Board
        }

        class HelpDialog [[HelpDialog.html]] {
            +HelpDialog(JFrame)
        }

        class KeyBindingsPanel [[KeyBindingsPanel.html]] {
            -addKeyBinding(String, String): void
        }

        class Move [[Move.html]] {
            -move: String
            -time: double
            +Move(String, double)
            +move(): String
            +time(): double
        }

        class PausedPanel [[PausedPanel.html]]

        class RecorderPanel [[RecorderPanel.html]] {
            -recordButton: JButton
            -loadButton: JButton
            -stepButton: JButton
            -autoReplayButton: JButton
            -replaySpeedSlider: JSlider
            {static} +recording: boolean
            -recordingIndicatorVisible: boolean
            -recordingIndicatorTimer: Timer
            {static} +time: int
            {static} +count: int
            ~file: File
            ~chapX: int
            ~chapY: int
            ~chapTreasures: int
            ~chapInitLevel: int
            ~boardTreasureCount: int
            ~timeLeft: int
            ~board: Tile[]
            ~speed: int
            +RecorderPanel(App)
            -initializeComponents(): void
            -addSlider(): void
            -addComponentsToPanel(): void
            {static} -createSimpleButton(String): JButton
            -startRecording(): void
            -stopRecording(): void
            +saveEndingInfo(): void
            #paintComponent(Graphics): void
            +getFileCount(): int
        }

        class nz.ac.wgtn.swen225.lc.app.RecorderPanel.RoundedBorder [[RecorderPanel.RoundedBorder.html]] {
            -radius: int
            ~RoundedBorder(int)
            +getBorderInsets(Component): Insets
            +isBorderOpaque(): boolean
            +paintBorder(Component, Graphics, int, int, int, int): void
        }

        javax.swing.JPanel <|- - App
        java.awt.event.ActionListener <|.. App
        App - -> PausedPanel: pausedPanel
        javax.swing.JDialog <|- - HelpDialog
        javax.swing.JPanel <|- - KeyBindingsPanel
        java.lang.Record <|- - Move
        javax.swing.JPanel <|- - PausedPanel
        javax.swing.JPanel <|- - RecorderPanel
        RecorderPanel - -> App: app
        RecorderPanel - -> "*" Move: moves\nmovesList
        javax.swing.border.Border <|.. nz.ac.wgtn.swen225.lc.app.RecorderPanel.RoundedBorder
        RecorderPanel +- - nz.ac.wgtn.swen225.lc.app.RecorderPanel.RoundedBorder
    }

    namespace javax.swing {
        class JPanel {
            {static} -uiClassID: String
        }
        class JDialog {
            {static} -defaultLookAndFeelDecoratedKey: Object
            -defaultCloseOperation: int
            #rootPane: JRootPane
            #rootPaneCheckingEnabled: boolean
            -transferHandler: TransferHandler
            #accessibleContext: AccessibleContext
        }
    }

    namespace java.awt.event {
        interface ActionListener {
            {abstract} +actionPerformed(ActionEvent): void
        }
    }

    namespace java.lang {
        abstract class Record
    }

    namespace javax.swing.border {
        interface Border {
            {abstract} +paintBorder(Component, Graphics, int, int, int, int): void
            {abstract} +getBorderInsets(Component): Insets
            {abstract} +isBorderOpaque(): boolean
        }
    }

    center footer UMLDoclet 2.0.14, PlantUML 1.2021.9
@enduml

PlantUML version 1.2021.9(Sun Jul 25 22:13:56 NZST 2021)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: NZ
--></g></svg>